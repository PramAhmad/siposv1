import * as _nuxt_schema from '@nuxt/schema';
import { CookieOptions } from 'nuxt/app';
import { SupabaseClientOptions } from '@supabase/supabase-js';

declare module '@nuxt/schema' {
  interface PublicRuntimeConfig {
    supabase: {
      url: string
      key: string
      redirect: boolean
      redirectOptions: RedirectOptions
      cookieName: string
      cookieOptions: CookieOptions
      clientOptions: SupabaseClientOptions<string>
    }
  }
}

interface RedirectOptions {
  login: string
  callback: string
  exclude?: string[]
}

interface ModuleOptions {
    /**
     * Supabase API URL
     * @default process.env.SUPABASE_URL
     * @example 'https://*.supabase.co'
     * @type string
     * @docs https://supabase.com/docs/reference/javascript/initializing#parameters
     */
    url: string;
    /**
     * Supabase Client API Key
     * @default process.env.SUPABASE_KEY
     * @example '123456789'
     * @type string
     * @docs https://supabase.com/docs/reference/javascript/initializing#parameters
     */
    key: string;
    /**
     * Supabase Service key
     * @default process.env.SUPABASE_SERVICE_KEY
     * @example '123456789'
     * @type string
     * @docs https://supabase.com/docs/reference/javascript/initializing#parameters
     */
    serviceKey: string;
    /**
     * Redirect automatically to login page if user is not authenticated
     * @default `true`
     * @type boolean
     */
    redirect?: boolean;
    /**
     * Redirection options, set routes for login and callback redirect
     * @default
     * {
        login: '/login',
        callback: '/confirm',
        exclude: [],
      }
     * @type RedirectOptions
     */
    redirectOptions?: RedirectOptions;
    /**
     * Cookie name, used for storing access and refresh tokens, added in front of `-access-token` and `-refresh-token` to form the full cookie name e.g. `sb-access-token`
     * @default 'sb'
     * @type string
     */
    cookieName?: string;
    /**
     * Cookie options
     * @default {
        maxAge: 60 * 60 * 8,
        sameSite: 'lax',
        secure: true,
      }
     * @type CookieOptions
     * @docs https://nuxt.com/docs/api/composables/use-cookie#options
     */
    cookieOptions?: CookieOptions;
    /**
     * Supabase Client options
     * @default {
        auth: {
          flowType: 'pkce',
          detectSessionInUrl: true,
          persistSession: true,
        },
      }
     * @type object
     * @docs https://supabase.com/docs/reference/javascript/initializing#parameters
     */
    clientOptions?: SupabaseClientOptions<string>;
}
declare const _default: _nuxt_schema.NuxtModule<ModuleOptions>;

export { type ModuleOptions, _default as default };
