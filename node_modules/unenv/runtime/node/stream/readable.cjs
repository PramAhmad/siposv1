"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports._Readable = exports.Readable = void 0;
var _events = require("../events/index.cjs");
class _Readable extends _events.EventEmitter {
  __unenv__ = true;
  readableEncoding = null;
  readableEnded = true;
  readableFlowing = false;
  readableHighWaterMark = 0;
  readableLength = 0;
  readableObjectMode = false;
  readableAborted = false;
  readableDidRead = false;
  closed = false;
  errored = null;
  readable = false;
  destroyed = false;
  static from(_iterable, options) {
    return new _Readable(options);
  }
  constructor(_opts) {
    super();
  }
  _read(_size) {}
  read(_size) {}
  setEncoding(_encoding) {
    return this;
  }
  pause() {
    return this;
  }
  resume() {
    return this;
  }
  isPaused() {
    return true;
  }
  unpipe(_destination) {
    return this;
  }
  unshift(_chunk, _encoding) {}
  wrap(_oldStream) {
    return this;
  }
  push(_chunk, _encoding) {
    return false;
  }
  _destroy(_error, _callback) {
    this.removeAllListeners();
  }
  destroy(error) {
    this.destroyed = true;
    this._destroy(error);
    return this;
  }
  pipe(_destenition, _options) {
    return {};
  }
  async *[Symbol.asyncIterator]() {}
  [Symbol.asyncDispose]() {
    this.destroy();
    return Promise.resolve();
  }
  compose(stream, options) {
    throw new Error("[h3] Method not implemented.");
  }
}
exports._Readable = _Readable;
const Readable = globalThis.Readable || _Readable;
exports.Readable = Readable;